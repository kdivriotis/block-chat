version: '3.8'
services:
  zookeeper:
    container_name: zookeeper
    image: 'confluentinc/cp-zookeeper:7.3.0'
    env_file:
      - ./envs/zookeeper.env
    restart: always
    healthcheck:
      test: nc -z zookeeper 2181 || exit -1
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 15s
  kafka:
    container_name: kafka
    image: 'confluentinc/cp-kafka:7.3.0'
    env_file:
      - ./envs/kafka.env
    depends_on:
      zookeeper:
        condition: service_healthy
    restart: always
    healthcheck:
      test: nc -z kafka 9092 || exit -1
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 15s
  node0:
    container_name: node0
    build: 
      context: .
      dockerfile: Dockerfile
    command: python3 Client.py -b -t 5
    volumes:
      - .:/app
    ports:
      - 5000:5000
    stdin_open: true
    tty: true
    env_file:
      - ./envs/test1_1.env
    depends_on:
      kafka:
        condition: service_healthy
  node1:
    container_name: node1
    build: 
      context: .
      dockerfile: Dockerfile
    command: sh -c "sleep 10 && python3 Client.py -t 5"
    volumes:
      - .:/app
    ports:
      - 5001:5000
    stdin_open: true
    tty: true
    env_file:
      - ./envs/test1_1.env
    depends_on:
      - node0
  node2:
    container_name: node2
    build: 
      context: .
      dockerfile: Dockerfile
    command: sh -c "sleep 10 && python3 Client.py -t 5"
    volumes:
      - .:/app
    ports:
      - 5002:5000
    stdin_open: true
    tty: true
    env_file:
      - ./envs/test1_1.env
    depends_on:
      - node0
  node3:
    container_name: node3
    build: 
      context: .
      dockerfile: Dockerfile
    command: sh -c "sleep 10 && python3 Client.py -t 5"
    volumes:
      - .:/app
    ports:
      - 5003:5000
    stdin_open: true
    tty: true
    env_file:
      - ./envs/test1_1.env
    depends_on:
      - node0
  node4:
    container_name: node4
    build: 
      context: .
      dockerfile: Dockerfile
    command: sh -c "sleep 10 && python3 Client.py -t 5"
    volumes:
      - .:/app
    ports:
      - 5004:5000
    stdin_open: true
    tty: true
    env_file:
      - ./envs/test1_1.env
    depends_on:
      - node0
